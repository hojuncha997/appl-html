//레이아웃을 만드는 방법은 여러 가지가 있는데,
그 중 첫 번째는 float을 사용하는 것이다.

레이아웃을 만들기 전에 레이아웃 전체를 감싸는 박스를 만들어 두면 편하다. 특히 PC용
일반적으로는 wrapper 박스 또는 container 박스라고 한다.

래퍼 박스는 최대 width등을 미리 지정하는 데에도 편리하다.


.header {
    /* 상위요소(부모태그)의 width의 100퍼센트라는 의미 */
    width: 100%;
    height: 100px;
    background: aquamarine
}

.left-menu {
    width: 20%;
    height: 400px;
    background-color: cornflowerblue;
}

.right {
    width: 80%;
    height: 400px;
    background-color: coral;
}

이렇게 하면 div 세 개가 세로로 쌓인다. 모든 div는 display:block 속성을 가지고 있기 때문이다.
display:block은 가로행을 전부 차지하므로 내려올 수밖에 없는 것이다.

따라서 float을 사용해서 div를 띄운 뒤 정렬하는 방법을 사용한다.

.container {
    width: 800px;
    /* background-color: gray; */
}

.header {
    /* 상위요소(부모태그)의 width의 100퍼센트라는 의미 */
    width: 100%;
    height: 100px;
    background: aquamarine
}

.left-menu {
    width: 20%;
    height: 400px;
    background-color: cornflowerblue;
    /*div태그는 display:block 속성을 가지고 있기 때문에 가로행 전부 차지
    따라서 float 속성을 사용해서 위치를 조정해준다*/
    /* 이 요소를 띄워서 왼쪽으로 정렬 => 자리가 비면서 right가 들어올려짐*/
    float: left;
}

.right {
    width: 80%;
    height: 400px;
    background-color: coral;
    /*div태그는 display:block 속성을 가지고 있기 때문에 가로행 전부 차지
    따라서 float 속성을 사용해서 위치를 조정해준다*/
    /* 이 요소를 띄워서 왼쪽으로 정렬 => left-menu쪽으로 붙이기*/
    /* right로 해도 상관은 없다. */
    float: left;
}


푸터를 만들어 보면


<body>
    <div class="container">
        <div class="header"></div>
        <div class="left-menu"></div>
        <div class="right"></div>
        <div class="footer"></div>

    </div>

</body>
...

.footer {
    width: 100%;
    height: 100px;
    background-color: gray;
}

이렇게 하면 보이지 않는다. left-menu와 right의 뒤에 가려져 보이지 않는 것이다.
왜 보이지 않느냐 하면 left-menu와 right가 float되어 띄워져 있기 때문에,
footer가 header 바로 밑에 붙어버려서 그렇다.

이럴 때는 float 다음에 오는 요소에게 clear:both 속성을 주면,
float로 발생하는 현상을 해결 가능하다. left, right 쓴 녀석 모두 없애겠다는 의미이다.

