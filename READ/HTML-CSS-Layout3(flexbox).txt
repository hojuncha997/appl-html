div 박스들을 가로로 배치하는 방법은 

float: left,
display: inline-block

말고도 더 있다.

display: flex 이다. 하위 요소를 감싸고 있는 상위 요소에게
display: flex; 속성을 주면 하위 요소들이 가로로 배치된다.

예시)
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <link href="./css/layout3.css" rel="stylesheet">
    <title>Document</title>
</head>

<body>
    <div class="flex-container">
        <!-- style="flex-grow: 를 쓰면 비교 대상보다 n 배수 크게 그려진다-->
        <div class="flex-item" style="flex-grow: 1;">1</div>
        <div class="flex-item" style="flex-grow: 2;">2</div>
        <div class="flex-item" style="flex-grow: 1;">3</div>
    </div>
</body>

</html>


-----------


.flex-container {
    /* 감싸고 있는 하위 요소들을 가로로 배치한다. */
    display: flex;

    /* display:flex인 요소에 대해서 화면의 가운데 정렬한다. 
    flex-end:우측, flex-start:좌측, center:중앙 등 많다.    */
    justify-content: center;

    /* flex의 방향을 조절할 수 있다. column은 세로, row는 가로*/
    flex-direction: row;

    /*  width가 클 때 밑으로 보내고 싶을 때. 좁아지면 
    flex박스가 세로로 아래로 내려간다*/
    flex-wrap: wrap;

    /* 아이템 정렬 : flex-start, center, flex-end등*/
    /* 상하정렬 실습 위해 height값으 주었다 */
    height: 500px;
    align-items: center;

}

.flex-item {
    /* width: 100%; */
    /* 실제로 600px에 가까이 차지하려고 노력한다.테이블 컬럼과 비슷하게 동작
    width: 600px; */
    width: 100px;
    height: 100px;
    background-color: gray;
    margin: 5px;
}




그런데 display:flex의 특징이 뭐냐면,
display:inline-block과 table 요소를 합쳤다고 보면 된다.






네비게이션 바 예제(layout2.html)


<body style="margin: 0px;">
    <nav class="nav-container">
        <div class="nav-item">Shoe shop</div>
        <!-- 이 녀석만 크기가 존재하기 때문에 꽉차려고 한다.-->
        <div style="flex-grow: 1;"></div>
        <div class="nav-item">products</div>
        <div class="nav-item">services</div>
    </nav>

------
.nav-container {
    /* 감싸고 있는 하위 요소들을 가로로 배치한다. */
    display: flex;
    height: 40px;
    align-items: center;
    padding: 10px;
    background-color: coral;
    color: white;


}

.nav-item {
    margin-right: 10px;

}



