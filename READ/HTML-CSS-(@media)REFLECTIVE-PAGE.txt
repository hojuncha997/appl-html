######################
1. <head>태그 내에 코드 삽입
######################

<meta name="viewport" content="width=device-width, initial-scale=1.0">

- width=device-width : 사용 기기의 실제 폭 의미.
- initial-scale=1 : 이 부분은 접속시의 화면 줌레벨 설정.


######################
2. css파일 최하단에 @media 쿼리 문법 추가
######################


/* 미디어 쿼리 문법 설정(css파일 최하단) */
/* 반응형 웹 용 스타일링: 브레이크 포인트 설정 */
@media screen and (max-width: 1200px) {
    .main-title {
        /* 1200px 이하에선 아래 속성 추가.  밑에 있는 코드 우선 설정 */
        font-size: 30px;
    }

    .nav-item {
        font-size: 12px;
    }
}

/* 여러 개 설정 가능 */
@media screen and (max-width: 768px) {
    .main-title {
        font-size: 20px;
    }
}

이게 전부이다.

# 참고 1.
@media only screen and (max-width: 768px) {
예전에는 IE 호환성 때문에 위처럼 only를 붙이는 경우도 있었다.
지금은 사용하지 않는다.

# 참고 2.
@media() { } 이렇게만 써도 잘 동작한다. 그래도 screen and 를 붙여주자.

# 참고 3.
@media print and (){}eh 있다.
print는 인쇄 미리보기 했을 때의 설정이다. screen은 모니터 화면이다.


######################
3. 브레이크 포인트에 대해서
######################

일반적으로 아래의 브레이크 포인트를 사용한다.

1200px (태블릿)
992px
768px
576px (모바일)

브레이크 포인트는 3개 정도가 적합하다.










px말고 다른 단위를 사용할 수 도 있다.

######################
1. vw, vh
######################

vw(view port width): 브라우저 폭에 비례 (view port는 브라우저의 보이는 부분)
    width: 100vw; 브라우저 가로폭 전체 차지 50vw는 50%차지
vh(view port height) : 브라우저 높이에 비례

.test {
    width: 100vw;
    height: 10vh;
    background-color: gray;
}


일반적으로는 vw를 많이 쓴다.


######################
2. rem
######################

rem이라는 단위도 있다. 
html에서 제공하는 기본 폰트 사이즈에 대한 비례를 나타나는 것이다.
html기본 폰트 사이즈는 기본 16px이다. 1rem = 16px;

따라서 10rem은 160px을 의미한다.

rem을 왜 쓸까? 예전 브라우저는 폰트 사이즈만 커지는 경우가 많아서
레이아웃이 깨지는 경우가 많았다. 따라서 기준 단위가 필요했기 때문에 rem을 썼던 것이다.
그러나 요즘은 잘 쓰지 않는다. 

"
예전엔 rem 단위를 가끔 썼습니다.
모든 div의 사이즈, margin, padding, 버튼 사이즈 이런게
기본 폰트사이즈에 비례해서 움직이게 만들고 싶을 때 rem을 사용했습니다.
브라우저 폰트사이즈를 키운 채로 웹브라우징 하는 사람이 있어서 그랬습니다.
하지만 요즘은 ctrl + 마우스휠업 이렇게 줌인을 해서 쓰는 사람이 대부분이라
페이지를 폰트사이즈에 가변적으로 반응하는 사이트 만들 때 빼고는 그닥 유용한 속성은 아닙니다.
"

######################
3. em
######################

내 폰트 사이즈의 배수. 거의 쓸 일 없다.