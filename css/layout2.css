.container {
    width: 800px;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.blog-content {
    width: 80%;
    height: 200px;
    /* background-color: #eee; */
    float: left;
}


.blog-img {
    width: 20%;
    height: 200px;
    /* background-color: yellow; */
    float: left;
}

.blog-profile {
    width: 50px;
    display: block;
    float: left;
}

.blog-name {

    float: left;
}

/* selector 문법 중에 하나이다. 
.navbar 내부의 모든 li태그는~~해라.(모든 자손 포함. 자식, 손자)

만약 .navbar>li {} 이렇게 한다면 직계 자식. 바로 아래의 대상만 적용된다.

*/
.navbar li {
    display: inline-block;
    width: 60px;
    text-align: center;
    background: #eee;
    padding: 10px;
    border-radius: 10px;
}

.navbar a {
    font-size: 16px;
    text-decoration: none;

}

/* 클래스를 두 개 이상 붙일 수도 있다. 띄어 쓰기 */


/* layout2 */
.main-background {
    width: 100%;
    height: 500px;
    /* 백그라운드 넣기 */
    background-image: url(../img/shoes.jpg);
    /* background-image: url(../img/shoes.jpg), url(); 배경 겹치기도 가능*/
    /* 바디 태그의 100%
    background-size: 100%; */

    /* div박스가 남아도 되니 그림이 잘리면 안됨 */
    /* background-size: contain; */

    /* 그림이 잘려도 상관 없으니 빈 공간 없이 채운다. 자주 사용 */
    background-size: cover;

    /* 이미지가 작은 경우 반복되는 것을 방지 */
    background-repeat: no-repeat;

    /* 그림이 기본적으로 왼쪽부터 채워지는데, 이걸 중앙으로 변경 */
    background-position: center;

    /* 스크롤 시 배경 위치 조정 가능 fixed는 고정 */
    /* background-attachment: fixed; */

    /* 박스에 보정 입히기: 명도, 채도 등 필터 기능
    문제는 내부에 사진이나 글이 있으면 전부 필터 입혀짐 */
    /* filter: brightness(70%); */

    /* margin collapse 현상을 방지하기 위해 패딩을 넣었다. */
    padding: 1px;
    color: white;
    text-align: center;

    /* 이렇게 하면 자식 요소 중 position: absolute를 가진 요소가
    이 요소를 기준으로 움직인다. */
    position: relative;
}

.main-title {
    color: white;
    font-size: 40px;
    /* margin-top: 200px;
    이렇게 margin collapse 현상이 생긴다.
    박수 2개의 테두리가 겹치는 경우 margin도 합쳐지는 현상이다.
    즉 여기서는 main-background까지 margin-top이 적용되는 것이다
    
    이게 싫으면 테두리를 겹치지 않게 하면 된다.
    여기서는 main-background에 padding: 1px;를 넣어서 떨어뜨린다.
    이러면 main-background div에 안쪽 여백이 생기면서 떨어지게 된다.
    */
}

.main-content {
    color: white;
    text-align: center;
    font-size: 30px;
}

.main-button {

    padding: 15px;
    font-size: 20px;
    background: white;
    border: none;
    border-radius: 5px;
    /* position 속성을 활용한 좌표이동:display: 
    1. 좌표 이동 기능
    2. 공중에 뜸
     */

    /* 
    relative: 내 원래 위치를 기준으로 사용할 것, 
    static: 좌표이동X, 
    fixed: 현재 화면(viewport)이 기준
    absolute: 내 부모 중에, position: relative를 가지는 녀석을 기준으로 움직인다. */
    position: absolute;
    /*  position: fixed;의 경우 스크롤을 내려도 그 자리에 계속 있으므로,
    화면에 고정되는 요소를 만들 때 유용하게 쓸 수 있다.*/

    /* 밑에서부터 0픽셀(여기서는 position:absolute기 때문에 부모박스 기준) */
    /* bottom: 20px; */
    /* 오른쪽에서부터 0px(여기서는 position:absolute기 때문에 부모박스 기준) */
    /* right: 20px; */

    /* position: absolute 준 요소를 가운데 정렬하려면,
    width는 존재하기만 하면 된다.
     */
    left: 0;
    right: 0;
    margin: auto;
    width: 150px;

}

.explain-box {
    width: 700px;
    margin: auto;
    /* display: block; div가 내장하고 있으므로 생략 */
    padding: 20px;
    text-align: center;
    background-color: #eee;
    /* margin-top:-50px; 이렇게 하면 겹친다. 원하는 것이 아니다. */
    /* position 으로 띄운 뒤, top: -40px; 해서 위로올린다.*/
    position: relative;
    top: -40px;

}