/* 이런 녀석들을 selector라고 부른다.
class는 class selector, id는 id selector

우선 순위는 id > class > 태그 순으로 우선 순위가 높은 게 우선이다.
그런데 HTML 내에서 인라인으로 style을 넣어주는 것이 가장 높다.
즉, sytle > id> class> tag
*/

.xxx {
    /* background: gray; */
}

.profile {
    border-radius: 5px;
    width: 300px;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.profile-img {
    border-radius: 20px;
}

.title {
    font-size: 16px;
    text-align: center;
}


.content {
    text-align: center;

}

.box {

    width: 100px;
    background: cadetblue;

    /* margin: 바깥쪽 여백 의미. -방향 써주지 않으면 상하좌우 마진 30px */
    margin: 30px;

    /* padding: 안쪽 여백 의미. -방향 써주지 않으면 상하좌우 패딩 30px*/
    padding: 40px;

    /* border: 테두리 두께 종류 속성 기입 가능 */
    /* border: 4px solid black; */
    border-radius: 5px;

    /* display: block; div는 기본적으로 block이라는 속성을 가지고 있기 때문에 생략해도 된다. 
    display : block은 가로 행을 전부 차지하게 해달라는 의미이다.*/
    margin-left: auto;
    margin-right: auto;

    font-size: 10px;
    /* css는 inherit 기능을 제공한다. font 사이즈와 같은 속성은 부모 태그에 설정하면
    자식 태그에도 상속된다. inherit은 font-size, font-family, color 등 여러 종류가 지원한다.*/

    color: white;

    /* box-shadow: 0px 0px 10px -2px #FFF; 글로우*/
    box-shadow: 30px 30px black;

}

.container {
    width: 800px;
    /* background-color: gray; */
}

.header {
    /* 상위요소(부모태그)의 width의 100퍼센트라는 의미 */
    width: 100%;
    height: 100px;
    background: aquamarine
}

.left-menu {
    width: 20%;
    height: 400px;
    background-color: cornflowerblue;
    /*div태그는 display:block 속성을 가지고 있기 때문에 가로행 전부 차지
    따라서 float 속성을 사용해서 위치를 조정해준다*/
    /* 이 요소를 띄워서 왼쪽으로 정렬 => 자리가 비면서 right가 들어올려짐*/
    float: left;
}

.right {
    width: 80%;
    height: 400px;
    background-color: coral;
    /*div태그는 display:block 속성을 가지고 있기 때문에 가로행 전부 차지
    따라서 float 속성을 사용해서 위치를 조정해준다*/
    /* 이 요소를 띄워서 왼쪽으로 정렬 => left-menu쪽으로 붙이기*/
    /* right로 해도 상관은 없다. */
    float: left;
}

.footer {
    width: 100%;
    height: 100px;
    background-color: gray;
    /* 이렇게 하면 보이지 않는다. left-menu와 right의 뒤에 가려져 보이지 않는 것이다.
    왜 보이지 않느냐 하면 left-menu와 right가 float되어 띄워져 있기 때문에,
    footer가 header 바로 밑에 붙어버려서 그렇다.

    이럴 때는 float 다음에 오는 요소에게 clear:both 속성을 주면,
    float로 발생하는 현상을 해결 가능하다 */

    clear: both;


}